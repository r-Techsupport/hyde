name: CI
# TODO: split this into two diffferent files then use
# a path filter `on.push.paths` so that each workflow
# is only run when the frontend or backend change

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  backend-build:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy

    - name: Lint
      run: cargo clippy --all -- -D warnings
    - name: Build
      run:  cargo build --verbose
    - name: Run tests
      run: cargo test --verbose

  frontend-build:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - name: Install deps
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: Check
        run: npm run check
      - name: Build
        run: npm run build
      - name: Test
        run: npm run test

  # This should depend on the backend and frontend builds, then if it is a PR submitted by Dependabot that is a patch it will merge the PR
  close_pr:
    needs: 
      - backend-build
      - frontend-build
    if: github.event_name == 'pull_request' && github.actor == 'dependabot[bot]'
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Dependabot metadata
        id: dependabot-metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - name: Merge PR
        if: steps.dependabot-metadata.outputs.update-type == 'version-update:semver-patch'
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GH_TOKEN: ${{secrets.GITHUB_TOKEN}}